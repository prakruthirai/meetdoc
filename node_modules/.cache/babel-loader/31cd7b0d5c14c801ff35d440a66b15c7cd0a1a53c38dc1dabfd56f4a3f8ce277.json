{"ast":null,"code":"var _s = $RefreshSig$();\n// import axios from 'axios'\n// import { jwtDecode } from \"jwt-decode\";\n// import dayjs from 'dayjs'\n// import { useContext } from 'react'\n// import { AuthContext } from '../context/AuthContext'\n\n// const baseURL = 'http://127.0.0.1:8000'\n\n// const useAxios = () => {\n//     const {authTokens, setUser, setAuthTokens} = useContext(AuthContext)\n\n//     const axiosInstance = axios.create({\n//         baseURL,\n//         headers:{Authorization: `Bearer ${authTokens?.access}`}\n//     });\n\n//     axiosInstance.interceptors.request.use(async req => {\n\n//         const user = jwtDecode(authTokens.access)\n//         const isExpired = dayjs.unix(user.exp).diff(dayjs()) < 1;\n\n//         if(!isExpired) return req\n\n//         const response = await axios.post(`${baseURL}/api/token/refresh/`, {\n//             refresh: authTokens.refresh\n//           });\n\n//         localStorage.setItem('authTokens', JSON.stringify(response.data))\n\n//         setAuthTokens(response.data)\n//         setUser(jwtDecode(response.data.access))\n\n//         req.headers.Authorization = `Bearer ${response.data.access}`\n//         return req\n//     })\n\n//     return axiosInstance\n// }\n\n// export default useAxios;\n\nimport axios from 'axios';\nimport { jwtDecode } from \"jwt-decode\";\nimport dayjs from 'dayjs';\nimport { useContext } from 'react';\nimport { AuthProvider } from '../context/AuthContext';\nconst baseURL = 'http://127.0.0.1:8000';\nconst useAxios = () => {\n  _s();\n  const {\n    authTokens,\n    setUser,\n    setAuthTokens\n  } = useContext(AuthProvider);\n  const axiosInstance = axios.create({\n    baseURL,\n    headers: {\n      Authorization: `Bearer ${authTokens === null || authTokens === void 0 ? void 0 : authTokens.access_token}`\n    }\n  });\n  axiosInstance.interceptors.request.use(async req => {\n    const user = jwtDecode(authTokens.access_token);\n    const isExpired = dayjs.unix(user.exp).diff(dayjs()) < 1;\n    if (!isExpired) return req;\n    try {\n      const response = await axios.post(`${baseURL}/api/token/refresh/`, {\n        refresh: authTokens.refresh_token\n      });\n      localStorage.setItem('authTokens', JSON.stringify(response.data));\n      setAuthTokens(response.data);\n      setUser(jwtDecode(response.data.access_token));\n      req.headers.Authorization = `Bearer ${response.data.access}`;\n    } catch (error) {\n      console.error(\"Error refreshing token:\", error);\n    }\n    return req;\n  });\n  return axiosInstance;\n};\n_s(useAxios, \"BY8wXILb98JGRtiYNfD1oywxzJ4=\");\nexport default useAxios;","map":{"version":3,"names":["axios","jwtDecode","dayjs","useContext","AuthProvider","baseURL","useAxios","_s","authTokens","setUser","setAuthTokens","axiosInstance","create","headers","Authorization","access_token","interceptors","request","use","req","user","isExpired","unix","exp","diff","response","post","refresh","refresh_token","localStorage","setItem","JSON","stringify","data","access","error","console"],"sources":["C:/Users/PRAKRUTHI/OneDrive/Desktop/meetdoc/src/utils/useAxios.js"],"sourcesContent":["// import axios from 'axios'\r\n// import { jwtDecode } from \"jwt-decode\";\r\n// import dayjs from 'dayjs'\r\n// import { useContext } from 'react'\r\n// import { AuthContext } from '../context/AuthContext'\r\n\r\n\r\n// const baseURL = 'http://127.0.0.1:8000'\r\n\r\n\r\n// const useAxios = () => {\r\n//     const {authTokens, setUser, setAuthTokens} = useContext(AuthContext)\r\n\r\n//     const axiosInstance = axios.create({\r\n//         baseURL,\r\n//         headers:{Authorization: `Bearer ${authTokens?.access}`}\r\n//     });\r\n\r\n\r\n//     axiosInstance.interceptors.request.use(async req => {\r\n    \r\n//         const user = jwtDecode(authTokens.access)\r\n//         const isExpired = dayjs.unix(user.exp).diff(dayjs()) < 1;\r\n    \r\n//         if(!isExpired) return req\r\n    \r\n//         const response = await axios.post(`${baseURL}/api/token/refresh/`, {\r\n//             refresh: authTokens.refresh\r\n//           });\r\n    \r\n//         localStorage.setItem('authTokens', JSON.stringify(response.data))\r\n        \r\n//         setAuthTokens(response.data)\r\n//         setUser(jwtDecode(response.data.access))\r\n        \r\n//         req.headers.Authorization = `Bearer ${response.data.access}`\r\n//         return req\r\n//     })\r\n    \r\n//     return axiosInstance\r\n// }\r\n\r\n// export default useAxios;\r\n\r\nimport axios from 'axios'\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport dayjs from 'dayjs'\r\nimport { useContext } from 'react'\r\nimport { AuthProvider } from '../context/AuthContext'\r\n\r\nconst baseURL = 'http://127.0.0.1:8000'\r\n\r\nconst useAxios = () => {\r\n    const { authTokens, setUser, setAuthTokens } = useContext(AuthProvider);\r\n\r\n    const axiosInstance = axios.create({\r\n        baseURL,\r\n        headers: { Authorization: `Bearer ${authTokens?.access_token}` }\r\n    });\r\n\r\n    axiosInstance.interceptors.request.use(async req => {\r\n        const user = jwtDecode(authTokens.access_token);\r\n        const isExpired = dayjs.unix(user.exp).diff(dayjs()) < 1;\r\n        \r\n        if (!isExpired) return req;\r\n\r\n        try {\r\n            const response = await axios.post(`${baseURL}/api/token/refresh/`, {\r\n                refresh: authTokens.refresh_token\r\n            });\r\n    \r\n            localStorage.setItem('authTokens', JSON.stringify(response.data));\r\n            setAuthTokens(response.data);\r\n            setUser(jwtDecode(response.data.access_token));\r\n    \r\n            req.headers.Authorization = `Bearer ${response.data.access}`;\r\n        } catch (error) {\r\n            console.error(\"Error refreshing token:\", error);\r\n        }\r\n        \r\n        return req;\r\n    });\r\n\r\n    return axiosInstance;\r\n}\r\n\r\nexport default useAxios;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,YAAY,QAAQ,wBAAwB;AAErD,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC,UAAU;IAAEC,OAAO;IAAEC;EAAc,CAAC,GAAGP,UAAU,CAACC,YAAY,CAAC;EAEvE,MAAMO,aAAa,GAAGX,KAAK,CAACY,MAAM,CAAC;IAC/BP,OAAO;IACPQ,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASN,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEO,YAAa;IAAE;EACnE,CAAC,CAAC;EAEFJ,aAAa,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,MAAMC,GAAG,IAAI;IAChD,MAAMC,IAAI,GAAGnB,SAAS,CAACO,UAAU,CAACO,YAAY,CAAC;IAC/C,MAAMM,SAAS,GAAGnB,KAAK,CAACoB,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,CAACC,IAAI,CAACtB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;IAExD,IAAI,CAACmB,SAAS,EAAE,OAAOF,GAAG;IAE1B,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,IAAI,CAAE,GAAErB,OAAQ,qBAAoB,EAAE;QAC/DsB,OAAO,EAAEnB,UAAU,CAACoB;MACxB,CAAC,CAAC;MAEFC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACjEvB,aAAa,CAACe,QAAQ,CAACQ,IAAI,CAAC;MAC5BxB,OAAO,CAACR,SAAS,CAACwB,QAAQ,CAACQ,IAAI,CAAClB,YAAY,CAAC,CAAC;MAE9CI,GAAG,CAACN,OAAO,CAACC,aAAa,GAAI,UAASW,QAAQ,CAACQ,IAAI,CAACC,MAAO,EAAC;IAChE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;IAEA,OAAOhB,GAAG;EACd,CAAC,CAAC;EAEF,OAAOR,aAAa;AACxB,CAAC;AAAAJ,EAAA,CAhCKD,QAAQ;AAkCd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}