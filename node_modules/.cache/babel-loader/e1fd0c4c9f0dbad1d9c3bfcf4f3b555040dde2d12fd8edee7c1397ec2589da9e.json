{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRAKRUTHI\\\\OneDrive\\\\Desktop\\\\meetdoc\\\\src\\\\pages\\\\SignupPage.js\",\n  _s = $RefreshSig$();\n// // RegisterPage.js\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const SignupPage = () => {\n//     const [username, setUsername] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const navigate = useNavigate();\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             // Send a request to your backend API to register the user\n//             const response = await fetch('http://127.0.0.1:8000/api/authentication/register', {\n//                 method: 'POST',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify({ username, email, password })\n//             });\n//             const data = await response.json();\n//             console.log('Registration successful:', data);\n\n//             // Redirect to the login page\n//             navigate('/signup');\n//         } catch (error) {\n//             console.error('Error occurred during registration:', error);\n//             // Handle error\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Register</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <div>\n//                     <label>Username:</label>\n//                     <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\n//                 </div>\n//                 <div>\n//                     <label>Email:</label>\n//                     <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n//                 </div>\n//                 <div>\n//                     <label>Password:</label>\n//                     <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n//                 </div>\n//                 <button type=\"submit\">Register</button>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default SignupPage;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  // const [first_name, setFirstname] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/authentication/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Registration failed');\n      }\n      // Clear form fields\n\n      setUsername('');\n      setEmail('');\n      // setFirstname('');\n      setPassword('');\n      // Set success message\n      setSuccessMessage('Registration successfull.');\n      // Redirect to signup page\n      navigate('/signup');\n    } catch (error) {\n      setError('Registration failed. Please try again.'); // Provide feedback to user\n      console.error('Error occurred during registration:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 27\n      }, this), \" \", successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 36\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(SignupPage, \"C8/W7bS6pOqhesgHolX0j2Q4Nfo=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupPage;\nexport default SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","SignupPage","_s","username","setUsername","email","setEmail","password","setPassword","error","setError","successMessage","setSuccessMessage","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/PRAKRUTHI/OneDrive/Desktop/meetdoc/src/pages/SignupPage.js"],"sourcesContent":["// // RegisterPage.js\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const SignupPage = () => {\r\n//     const [username, setUsername] = useState('');\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             // Send a request to your backend API to register the user\r\n//             const response = await fetch('http://127.0.0.1:8000/api/authentication/register', {\r\n//                 method: 'POST',\r\n//                 headers: { 'Content-Type': 'application/json' },\r\n//                 body: JSON.stringify({ username, email, password })\r\n//             });\r\n//             const data = await response.json();\r\n//             console.log('Registration successful:', data);\r\n\r\n//             // Redirect to the login page\r\n//             navigate('/signup');\r\n//         } catch (error) {\r\n//             console.error('Error occurred during registration:', error);\r\n//             // Handle error\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Register</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div>\r\n//                     <label>Username:</label>\r\n//                     <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n//                 </div>\r\n//                 <div>\r\n//                     <label>Email:</label>\r\n//                     <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n//                 </div>\r\n//                 <div>\r\n//                     <label>Password:</label>\r\n//                     <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n//                 </div>\r\n//                 <button type=\"submit\">Register</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default SignupPage;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SignupPage = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    // const [first_name, setFirstname] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/api/authentication/register', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({  username, email, password })\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Registration failed');\r\n            }\r\n            // Clear form fields\r\n            \r\n            setUsername('');\r\n            setEmail('');\r\n            // setFirstname('');\r\n            setPassword('');\r\n            // Set success message\r\n            setSuccessMessage('Registration successfull.');\r\n            // Redirect to signup page\r\n            navigate('/signup');\r\n        } catch (error) {\r\n            setError('Registration failed. Please try again.'); // Provide feedback to user\r\n            console.error('Error occurred during registration:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Register</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>Username:</label>\r\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n                </div>\r\n                <div>\r\n                    <label>Email:</label>\r\n                    <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n                </div>\r\n                {/* <div>\r\n                    <label>Firstname:</label>\r\n                    <input type=\"text\" value={first_name} onChange={(e) => setFirstname(e.target.value)} required />\r\n                </div> */}\r\n                <div>\r\n                    <label>Password:</label>\r\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n                </div>\r\n                <button type=\"submit\">Register</button>\r\n\r\n                {error && <p>{error}</p>} {/* Display error message if registration fails */}\r\n                {successMessage && <p>{successMessage}</p>} {/* Display success message */}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}