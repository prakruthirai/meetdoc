{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anusha ps\\\\Desktop\\\\meetdoc\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from 'react';\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst useAuth = () => {\n  _s();\n  const [authTokens, setAuthTokens] = useState(null);\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  const handleLogin = () => {\n    const checkPassword = checkPasswordValidty(password);\n    if (!checkPassword) {\n      user_login({\n        email: email.toLocaleLowerCase(),\n        password: password\n      }).then(result => {\n        console.log(result);\n        if (result.status == 200) {\n          AsyncStorage.setItem('AccessToken');\n        }\n      });\n    }\n  };\n  const loginUser = async (username, password) => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/authentication/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'username': username,\n          'password': password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to authenticate');\n      }\n      const data = await response.json();\n      // if (data && typeof data.access === 'string' && data.access.length > 0) {\n      // if(response.status === 200){\n      //     setAuthTokens(data);\n      //     setUser(jwtDecode(data.access));\n      //     localStorage.setItem('authTokens', JSON.stringify(data));\n      //     navigate('/');\n      if (data && data.access_token) {\n        setAuthTokens(data);\n        setUser(jwtDecode(data.access_token));\n        localStorage.setItem('authTokens', JSON.stringify(data));\n        navigate('/');\n      } else {\n        // alert('Something went wrong!!');\n        throw new Error('Invalid token received');\n      }\n    } catch (error) {\n      console.error('Error occurred during login:', error);\n      alert('Failed to authenticate. Please try again.');\n    }\n  };\n  const logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem('authTokens');\n    navigate('/login');\n  };\n  const updateToken = async () => {\n    console.log('Update token called');\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/authentication/refresh', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          // 'refresh': authTokens.refresh\n          'refresh': authTokens.refresh_token\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setAuthTokens(data);\n        setUser(jwtDecode(data.access_token));\n        localStorage.setItem('authTokens', JSON.stringify(data));\n      } else {\n        throw new Error('Failed to refresh token');\n      }\n    } catch (error) {\n      console.error('Error occurred during token refresh:', error);\n      logoutUser();\n    }\n  };\n  //         if(response.status === 200) {\n  //             const data = await response.json();\n  //             setAuthTokens(data);\n  //             setUser(jwtDecode(data.access));\n  //             localStorage.setItem('authTokens', JSON.stringify(data));\n  //         } else {\n  //             logoutUser();\n  //         }\n  //     } catch (error) {\n  //         console.error('Error occurred during token refresh:', error);\n  //         logoutUser();\n  //     }\n  // };\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, 2000);\n    return () => clearInterval(interval);\n  }, [authTokens]);\n  return {\n    user,\n    loginUser,\n    logoutUser\n  };\n};\n_s(useAuth, \"bADW474GE9R+P7s/sACyUq6I5JE=\", false, function () {\n  return [useNavigate];\n});\nconst AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const auth = useAuth();\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"YuJWYXaKIY31b1y7U6yy3IXSxQA=\", false, function () {\n  return [useAuth];\n});\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jwtDecode","useNavigate","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","authTokens","setAuthTokens","user","setUser","navigate","handleLogin","checkPassword","checkPasswordValidty","password","user_login","email","toLocaleLowerCase","then","result","console","log","status","AsyncStorage","setItem","loginUser","username","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","access_token","localStorage","error","alert","logoutUser","removeItem","updateToken","refresh_token","interval","setInterval","clearInterval","AuthProvider","children","_s2","auth","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anusha ps/Desktop/meetdoc/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst useAuth = () => {\r\n    const [authTokens, setAuthTokens] = useState(null);\r\n    const [user, setUser] = useState(null);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogin = () => {\r\n        const checkPassword = checkPasswordValidty(password);\r\n        if(!checkPassword){\r\n            user_login({\r\n                email:email.toLocaleLowerCase(),\r\n                password: password,\r\n            })\r\n            .then(result =>{\r\n                console.log(result);\r\n                if (result.status == 200){\r\n                    AsyncStorage.setItem('AccessToken',)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const loginUser = async (username, password) => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/api/authentication/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    'username': username,\r\n                    'password': password\r\n                })\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Failed to authenticate');\r\n            }\r\n            const data = await response.json();\r\n            // if (data && typeof data.access === 'string' && data.access.length > 0) {\r\n            // if(response.status === 200){\r\n            //     setAuthTokens(data);\r\n            //     setUser(jwtDecode(data.access));\r\n            //     localStorage.setItem('authTokens', JSON.stringify(data));\r\n            //     navigate('/');\r\n            if (data && data.access_token) {\r\n                setAuthTokens(data);\r\n                setUser(jwtDecode(data.access_token));\r\n                localStorage.setItem('authTokens', JSON.stringify(data));\r\n                navigate('/');\r\n            } else {\r\n                // alert('Something went wrong!!');\r\n                throw new Error('Invalid token received');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error occurred during login:', error);\r\n            alert('Failed to authenticate. Please try again.');\r\n        }\r\n    };\r\n\r\n    const logoutUser = () => {\r\n        setAuthTokens(null);\r\n        setUser(null);\r\n        localStorage.removeItem('authTokens');\r\n        navigate('/login');\r\n    };\r\n\r\n    const updateToken = async () => {\r\n        console.log('Update token called');\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/api/authentication/refresh', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    // 'refresh': authTokens.refresh\r\n                    'refresh': authTokens.refresh_token\r\n                })\r\n            });\r\n            if(response.ok) {\r\n                const data = await response.json();\r\n                setAuthTokens(data);\r\n                setUser(jwtDecode(data.access_token));\r\n                localStorage.setItem('authTokens', JSON.stringify(data));\r\n            } else {\r\n                throw new Error('Failed to refresh token');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error occurred during token refresh:', error);\r\n            logoutUser();\r\n        }\r\n    };\r\n    //         if(response.status === 200) {\r\n    //             const data = await response.json();\r\n    //             setAuthTokens(data);\r\n    //             setUser(jwtDecode(data.access));\r\n    //             localStorage.setItem('authTokens', JSON.stringify(data));\r\n    //         } else {\r\n    //             logoutUser();\r\n    //         }\r\n    //     } catch (error) {\r\n    //         console.error('Error occurred during token refresh:', error);\r\n    //         logoutUser();\r\n    //     }\r\n    // };\r\n\r\n    useEffect(() => {\r\n        let interval = setInterval(() => {\r\n            if(authTokens) {\r\n                updateToken();\r\n            }\r\n        }, 2000);\r\n        return () => clearInterval(interval);\r\n    }, [authTokens]);\r\n\r\n    return { user, loginUser, logoutUser };\r\n};\r\n\r\nconst AuthProvider = ({ children }) => {\r\n    const auth = useAuth();\r\n    return (\r\n        <AuthContext.Provider value={auth}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACjE,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,aAAa,GAAGC,oBAAoB,CAACC,QAAQ,CAAC;IACpD,IAAG,CAACF,aAAa,EAAC;MACdG,UAAU,CAAC;QACPC,KAAK,EAACA,KAAK,CAACC,iBAAiB,CAAC,CAAC;QAC/BH,QAAQ,EAAEA;MACd,CAAC,CAAC,CACDI,IAAI,CAACC,MAAM,IAAG;QACXC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;QACnB,IAAIA,MAAM,CAACG,MAAM,IAAI,GAAG,EAAC;UACrBC,YAAY,CAACC,OAAO,CAAC,aAAc,CAAC;QACxC;MACJ,CAAC,CAAC;IACN;EACJ,CAAC;EAED,MAAMC,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEZ,QAAQ,KAAK;IAC5C,IAAI;MACA,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgD,EAAE;QAC3EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjB,UAAU,EAAEP,QAAQ;UACpB,UAAU,EAAEZ;QAChB,CAAC;MACL,CAAC,CAAC;MACF,IAAI,CAACa,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC7C;MACA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClC;MACA;MACA;MACA;MACA;MACA;MACA,IAAID,IAAI,IAAIA,IAAI,CAACE,YAAY,EAAE;QAC3B/B,aAAa,CAAC6B,IAAI,CAAC;QACnB3B,OAAO,CAACV,SAAS,CAACqC,IAAI,CAACE,YAAY,CAAC,CAAC;QACrCC,YAAY,CAACf,OAAO,CAAC,YAAY,EAAEQ,IAAI,CAACC,SAAS,CAACG,IAAI,CAAC,CAAC;QACxD1B,QAAQ,CAAC,GAAG,CAAC;MACjB,CAAC,MAAM;QACH;QACA,MAAM,IAAIyB,KAAK,CAAC,wBAAwB,CAAC;MAC7C;IACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZpB,OAAO,CAACoB,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDC,KAAK,CAAC,2CAA2C,CAAC;IACtD;EACJ,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrBnC,aAAa,CAAC,IAAI,CAAC;IACnBE,OAAO,CAAC,IAAI,CAAC;IACb8B,YAAY,CAACI,UAAU,CAAC,YAAY,CAAC;IACrCjC,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC;EAED,MAAMkC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5BxB,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,kDAAkD,EAAE;QAC7EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjB;UACA,SAAS,EAAE3B,UAAU,CAACuC;QAC1B,CAAC;MACL,CAAC,CAAC;MACF,IAAGlB,QAAQ,CAACO,EAAE,EAAE;QACZ,MAAME,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClC9B,aAAa,CAAC6B,IAAI,CAAC;QACnB3B,OAAO,CAACV,SAAS,CAACqC,IAAI,CAACE,YAAY,CAAC,CAAC;QACrCC,YAAY,CAACf,OAAO,CAAC,YAAY,EAAEQ,IAAI,CAACC,SAAS,CAACG,IAAI,CAAC,CAAC;MAC5D,CAAC,MAAM;QACH,MAAM,IAAID,KAAK,CAAC,yBAAyB,CAAC;MAC9C;IACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZpB,OAAO,CAACoB,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5DE,UAAU,CAAC,CAAC;IAChB;EACJ,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA7C,SAAS,CAAC,MAAM;IACZ,IAAIiD,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC7B,IAAGzC,UAAU,EAAE;QACXsC,WAAW,CAAC,CAAC;MACjB;IACJ,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMI,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACxC,UAAU,CAAC,CAAC;EAEhB,OAAO;IAAEE,IAAI;IAAEiB,SAAS;IAAEiB;EAAW,CAAC;AAC1C,CAAC;AAACrC,EAAA,CApHID,OAAO;EAAA,QAIQJ,WAAW;AAAA;AAkHhC,MAAMiD,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACnC,MAAMC,IAAI,GAAGhD,OAAO,CAAC,CAAC;EACtB,oBACIF,OAAA,CAACC,WAAW,CAACkD,QAAQ;IAACC,KAAK,EAAEF,IAAK;IAAAF,QAAA,EAC7BA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACP,GAAA,CAPIF,YAAY;EAAA,QACD7C,OAAO;AAAA;AAAAuD,EAAA,GADlBV,YAAY;AASlB,SAAS9C,WAAW,EAAE8C,YAAY;AAAG,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}