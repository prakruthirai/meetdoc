{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\meetdoc\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// import React, {createContext, useState} from 'react'\n\n// const AuthContext = createContext()\n\n// const AuthProvider = ({children}) => {\n\n//     let [authTokens, setAuthTokens] = useState(null)\n//     let [user, setUser] = useState(null)\n\n//     let loginUser = async (e )=> {\n//         e.preventDefault()\n//         let response = fetch('http://127.0.0.1:8000/api/token/',{\n//             method:'POST',\n//             headers:{ \n//                 'Content-Type':'application/json'\n//             },\n//             body:JSON.stringify({'username':e.target.username.value, 'password':e.target.password.value})\n//         })\n\n//         let data = await response.json()\n//         console.log('data:', data)\n//     }\n//     let contextData = {\n//         loginUser:loginUser\n\n//     }\n//     return(\n//         <AuthContext.Provider value={contextData}>\n//             {children}\n//         </AuthContext.Provider>\n//     )\n\n// }\n\n// export {AuthContext, AuthProvider};\n\nimport React, { createContext, useState } from 'react';\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authTokens, setAuthTokens] = useState(null);\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  const loginUser = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/token/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'username': e.target.username.value,\n          'password': e.target.password.value\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to authenticate');\n      }\n      const data = await response.json();\n      if (response.status == 200) {\n        setAuthTokens(data);\n        setUser(jwtDecode(data.access));\n        localStorage.setItem('authTokens', JSON.stringify(data));\n        navigate('/');\n      } else {\n        alert('Something went wrong!!');\n      }\n\n      // console.log('data:', data);\n      // console.log('response:', response);\n      // Assuming your server returns authentication tokens, setAuthTokens(data.tokens) here\n      // Similarly, set user details using setUser(data.user)\n    } catch (error) {\n      console.error('Error occurred during login:', error);\n    }\n  };\n  const contextData = {\n    user: user,\n    loginUser: loginUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"CQraQm0Fw9B8sOZAN63sTjtLtHk=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","jwtDecode","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authTokens","setAuthTokens","user","setUser","navigate","loginUser","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","target","username","value","password","ok","Error","data","json","status","access","localStorage","setItem","alert","error","console","contextData","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/OneDrive/Desktop/meetdoc/src/context/AuthContext.js"],"sourcesContent":["// import React, {createContext, useState} from 'react'\r\n\r\n\r\n// const AuthContext = createContext()\r\n\r\n\r\n// const AuthProvider = ({children}) => {\r\n\r\n//     let [authTokens, setAuthTokens] = useState(null)\r\n//     let [user, setUser] = useState(null)\r\n\r\n\r\n//     let loginUser = async (e )=> {\r\n//         e.preventDefault()\r\n//         let response = fetch('http://127.0.0.1:8000/api/token/',{\r\n//             method:'POST',\r\n//             headers:{ \r\n//                 'Content-Type':'application/json'\r\n//             },\r\n//             body:JSON.stringify({'username':e.target.username.value, 'password':e.target.password.value})\r\n//         })\r\n\r\n//         let data = await response.json()\r\n//         console.log('data:', data)\r\n//     }\r\n//     let contextData = {\r\n//         loginUser:loginUser\r\n\r\n//     }\r\n//     return(\r\n//         <AuthContext.Provider value={contextData}>\r\n//             {children}\r\n//         </AuthContext.Provider>\r\n//     )\r\n\r\n// }\r\n\r\n// export {AuthContext, AuthProvider};\r\n\r\n\r\nimport React, { createContext, useState } from 'react';\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n\r\n    const [authTokens, setAuthTokens] = useState(null);\r\n    const [user, setUser] = useState(null);\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const loginUser = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/api/token/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    'username': e.target.username.value,\r\n                    'password': e.target.password.value\r\n                })\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Failed to authenticate');\r\n            }\r\n            const data = await response.json();\r\n            if(response.status == 200){\r\n                setAuthTokens(data)\r\n                setUser(jwtDecode(data.access))\r\n                localStorage.setItem('authTokens',JSON.stringify(data))\r\n                navigate('/')\r\n            }else{\r\n                alert('Something went wrong!!')\r\n            }\r\n\r\n            // console.log('data:', data);\r\n            // console.log('response:', response);\r\n            // Assuming your server returns authentication tokens, setAuthTokens(data.tokens) here\r\n            // Similarly, set user details using setUser(data.user)\r\n        } catch (error) {\r\n            console.error('Error occurred during login:', error);\r\n        }\r\n    };\r\n\r\n    const contextData = {\r\n        user:user,\r\n        loginUser: loginUser\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextData}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\n"],"mappings":";;AAAA;;AAGA;;AAGA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAEnC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,SAAS,GAAG,MAAOC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjB,UAAU,EAAER,CAAC,CAACS,MAAM,CAACC,QAAQ,CAACC,KAAK;UACnC,UAAU,EAAEX,CAAC,CAACS,MAAM,CAACG,QAAQ,CAACD;QAClC,CAAC;MACL,CAAC,CAAC;MACF,IAAI,CAACT,QAAQ,CAACW,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC7C;MACA,MAAMC,IAAI,GAAG,MAAMb,QAAQ,CAACc,IAAI,CAAC,CAAC;MAClC,IAAGd,QAAQ,CAACe,MAAM,IAAI,GAAG,EAAC;QACtBtB,aAAa,CAACoB,IAAI,CAAC;QACnBlB,OAAO,CAACX,SAAS,CAAC6B,IAAI,CAACG,MAAM,CAAC,CAAC;QAC/BC,YAAY,CAACC,OAAO,CAAC,YAAY,EAACb,IAAI,CAACC,SAAS,CAACO,IAAI,CAAC,CAAC;QACvDjB,QAAQ,CAAC,GAAG,CAAC;MACjB,CAAC,MAAI;QACDuB,KAAK,CAAC,wBAAwB,CAAC;MACnC;;MAEA;MACA;MACA;MACA;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACxD;EACJ,CAAC;EAED,MAAME,WAAW,GAAG;IAChB5B,IAAI,EAACA,IAAI;IACTG,SAAS,EAAEA;EACf,CAAC;EAED,oBACIV,OAAA,CAACC,WAAW,CAACmC,QAAQ;IAACd,KAAK,EAAEa,WAAY;IAAAhC,QAAA,EACpCA;EAAQ;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACpC,EAAA,CApDIF,YAAY;EAAA,QAKGJ,WAAW;AAAA;AAAA2C,EAAA,GAL1BvC,YAAY;AAsDlB,SAASD,WAAW,EAAEC,YAAY;AAAG,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}