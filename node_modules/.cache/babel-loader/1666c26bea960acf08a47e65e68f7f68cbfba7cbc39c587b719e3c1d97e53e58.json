{"ast":null,"code":"// import React, { createContext, useEffect, useState } from \"react\";\n// import { jwtDecode } from \"jwt-decode\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const AuthContext = createContext();\n\n// const useAuth = () => {\n//   const [authTokens, setAuthTokens] = useState(null);\n//   const [user, setUser] = useState(null);\n\n//   const navigate = useNavigate();\n//   const loginUser = async (username, password) => {\n//     try {\n//         const response = await fetch(\n//             \"http://127.0.0.1:8000/api/authentication/login\",\n//             {\n//                 method: \"POST\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                 },\n//                 body: JSON.stringify({\n//                     username: username,\n//                     password: password,\n//                 }),\n//             }\n//         );\n\n//         if (!response.ok) {\n//             throw new Error(\"Failed to authenticate\");\n//         }\n\n//         const data = await response.json();\n//         console.log(\"Response data:\", data);\n\n//         if (data && data.data && data.data.access_token) {\n//             setAuthTokens(data.data);\n//             setUser(jwtDecode(data.data.access_token));\n//             localStorage.setItem(\"authTokens\", JSON.stringify(data.data));\n//             navigate(\"/\");\n//         } else {\n//             console.error(\"Invalid token received:\", data.data.access_token);\n//             throw new Error(\"Invalid token received\");\n//         }\n//     } catch (error) {\n//         console.error(\"Error occurred during login:\", error);\n//         alert(\"Failed to authenticate. Please try again.\");\n//     }\n// };\n\n//   const logoutUser = () => {\n//     setAuthTokens(null);\n//     setUser(null);\n//     localStorage.removeItem(\"authTokens\");\n//     navigate(\"/login\");\n//   };\n\n//   const updateToken = async () => {\n//     console.log(\"Update token called\");\n//     try {\n//       const response = await fetch(\n//         \"http://127.0.0.1:8000/api/authentication/refresh\",\n//         {\n//           method: \"POST\",\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify({\n//             refresh: authTokens.refresh_token,\n//           }),\n//         }\n//       );\n//       if (response.ok) {\n//         const data = await response.json();\n//         setAuthTokens(data);\n//         setUser(jwtDecode(data.access_token));\n//         localStorage.setItem(\"authTokens\", JSON.stringify(data));\n//       } else {\n//         throw new Error(\"Failed to refresh token\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error occurred during token refresh:\", error);\n//       logoutUser();\n//     }\n//   };\n\n//   return { user, loginUser, logoutUser };\n// };\n\n// const AuthProvider = ({ children }) => {\n//   const auth = useAuth();\n//   return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\n// };\n\n// export { AuthContext, AuthProvider };","map":{"version":3,"names":[],"sources":["C:/Users/PRAKRUTHI/OneDrive/Desktop/meetdoc/src/context/AuthContext.js"],"sourcesContent":["// import React, { createContext, useEffect, useState } from \"react\";\r\n// import { jwtDecode } from \"jwt-decode\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const AuthContext = createContext();\r\n\r\n// const useAuth = () => {\r\n//   const [authTokens, setAuthTokens] = useState(null);\r\n//   const [user, setUser] = useState(null);\r\n\r\n//   const navigate = useNavigate();\r\n//   const loginUser = async (username, password) => {\r\n//     try {\r\n//         const response = await fetch(\r\n//             \"http://127.0.0.1:8000/api/authentication/login\",\r\n//             {\r\n//                 method: \"POST\",\r\n//                 headers: {\r\n//                     \"Content-Type\": \"application/json\",\r\n//                 },\r\n//                 body: JSON.stringify({\r\n//                     username: username,\r\n//                     password: password,\r\n//                 }),\r\n//             }\r\n//         );\r\n\r\n//         if (!response.ok) {\r\n//             throw new Error(\"Failed to authenticate\");\r\n//         }\r\n\r\n//         const data = await response.json();\r\n//         console.log(\"Response data:\", data);\r\n\r\n//         if (data && data.data && data.data.access_token) {\r\n//             setAuthTokens(data.data);\r\n//             setUser(jwtDecode(data.data.access_token));\r\n//             localStorage.setItem(\"authTokens\", JSON.stringify(data.data));\r\n//             navigate(\"/\");\r\n//         } else {\r\n//             console.error(\"Invalid token received:\", data.data.access_token);\r\n//             throw new Error(\"Invalid token received\");\r\n//         }\r\n//     } catch (error) {\r\n//         console.error(\"Error occurred during login:\", error);\r\n//         alert(\"Failed to authenticate. Please try again.\");\r\n//     }\r\n// };\r\n\r\n\r\n\r\n//   const logoutUser = () => {\r\n//     setAuthTokens(null);\r\n//     setUser(null);\r\n//     localStorage.removeItem(\"authTokens\");\r\n//     navigate(\"/login\");\r\n//   };\r\n\r\n//   const updateToken = async () => {\r\n//     console.log(\"Update token called\");\r\n//     try {\r\n//       const response = await fetch(\r\n//         \"http://127.0.0.1:8000/api/authentication/refresh\",\r\n//         {\r\n//           method: \"POST\",\r\n//           headers: {\r\n//             \"Content-Type\": \"application/json\",\r\n//           },\r\n//           body: JSON.stringify({\r\n//             refresh: authTokens.refresh_token,\r\n//           }),\r\n//         }\r\n//       );\r\n//       if (response.ok) {\r\n//         const data = await response.json();\r\n//         setAuthTokens(data);\r\n//         setUser(jwtDecode(data.access_token));\r\n//         localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n//       } else {\r\n//         throw new Error(\"Failed to refresh token\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error occurred during token refresh:\", error);\r\n//       logoutUser();\r\n//     }\r\n//   };\r\n\r\n//   return { user, loginUser, logoutUser };\r\n// };\r\n\r\n// const AuthProvider = ({ children }) => {\r\n//   const auth = useAuth();\r\n//   return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\r\n// };\r\n\r\n// export { AuthContext, AuthProvider };"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}