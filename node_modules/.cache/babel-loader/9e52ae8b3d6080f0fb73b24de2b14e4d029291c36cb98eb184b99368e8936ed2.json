{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRAKRUTHI\\\\OneDrive\\\\Desktop\\\\meetdoc\\\\src\\\\context\\\\AuthContext.js\",\n  _s2 = $RefreshSig$();\n// import React, {createContext, useState} from 'react'\n\n// const AuthContext = createContext()\n\n// const AuthProvider = ({children}) => {\n\n//     let [authTokens, setAuthTokens] = useState(null)\n//     let [user, setUser] = useState(null)\n\n//     let loginUser = async (e )=> {\n//         e.preventDefault()\n//         let response = fetch('http://127.0.0.1:8000/api/token/',{\n//             method:'POST',\n//             headers:{ \n//                 'Content-Type':'application/json'\n//             },\n//             body:JSON.stringify({'username':e.target.username.value, 'password':e.target.password.value})\n//         })\n\n//         let data = await response.json()\n//         console.log('data:', data)\n//     }\n//     let contextData = {\n//         loginUser:loginUser\n\n//     }\n//     return(\n//         <AuthContext.Provider value={contextData}>\n//             {children}\n//         </AuthContext.Provider>\n//     )\n\n// }\n\n// export {AuthContext, AuthProvider};\n\nimport React, { createContext, useEffect, useState } from 'react';\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [authTokens, setAuthTokens] = useState(null);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const loginUser = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/token/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'username': e.target.username.value,\n          'password': e.target.password.value\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to authenticate');\n      }\n      const data = await response.json();\n      if (response.status === 200) {\n        setAuthTokens(data);\n        setUser(jwtDecode(data.access));\n        localStorage.setItem(authTokens, JSON.stringify(data));\n        navigate('/');\n      } else {\n        alert('Something went wrong!!');\n      }\n\n      // console.log('data:', data);\n      // console.log('response:', response);\n      // Assuming your server returns authentication tokens, setAuthTokens(data.tokens) here\n      // Similarly, set user details using setUser(data.user)\n    } catch (error) {\n      console.error('Error occurred during login:', error);\n    }\n  };\n  let logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem('authTokens');\n    navigate('/login');\n  };\n  let updateToken = async () => {\n    _s();\n    console.log('Update token called');\n    const response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'refresh': authTokens.refresh\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwtDecode(data.access));\n      localStorage.setItem(authTokens, JSON.stringify(data));\n    } else {\n      logoutUser();\n    }\n    const contextData = {\n      user: user,\n      loginUser: loginUser,\n      logoutUser: logoutUser\n    };\n    useEffect(() => {\n      let interval = setInterval(() => {\n        if (authTokens) {\n          updateToken();\n        }\n      }, 2000);\n      return () => clearInterval(interval);\n    }, [authTokens, loading]);\n    return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: contextData,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this);\n  };\n  _s(updateToken, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n};\n_s2(AuthProvider, \"5zqki2arx78EQsJ7szX17IDzWzQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jwtDecode","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s2","_s","$RefreshSig$","authTokens","setAuthTokens","user","setUser","loading","setLoading","navigate","loginUser","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","target","username","value","password","ok","Error","data","json","status","access","localStorage","setItem","alert","error","console","logoutUser","removeItem","updateToken","log","refresh","contextData","interval","setInterval","clearInterval","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PRAKRUTHI/OneDrive/Desktop/meetdoc/src/context/AuthContext.js"],"sourcesContent":["// import React, {createContext, useState} from 'react'\r\n\r\n\r\n// const AuthContext = createContext()\r\n\r\n\r\n// const AuthProvider = ({children}) => {\r\n\r\n//     let [authTokens, setAuthTokens] = useState(null)\r\n//     let [user, setUser] = useState(null)\r\n\r\n\r\n//     let loginUser = async (e )=> {\r\n//         e.preventDefault()\r\n//         let response = fetch('http://127.0.0.1:8000/api/token/',{\r\n//             method:'POST',\r\n//             headers:{ \r\n//                 'Content-Type':'application/json'\r\n//             },\r\n//             body:JSON.stringify({'username':e.target.username.value, 'password':e.target.password.value})\r\n//         })\r\n\r\n//         let data = await response.json()\r\n//         console.log('data:', data)\r\n//     }\r\n//     let contextData = {\r\n//         loginUser:loginUser\r\n\r\n//     }\r\n//     return(\r\n//         <AuthContext.Provider value={contextData}>\r\n//             {children}\r\n//         </AuthContext.Provider>\r\n//     )\r\n\r\n// }\r\n\r\n// export {AuthContext, AuthProvider};\r\n\r\n\r\nimport React, { createContext, useEffect, useState } from 'react';\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n\r\n    const [authTokens, setAuthTokens] = useState(null);\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true)\r\n\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const loginUser = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/api/token/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    'username': e.target.username.value,\r\n                    'password': e.target.password.value\r\n                })\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Failed to authenticate');\r\n            }\r\n            const data = await response.json();\r\n            if(response.status === 200){\r\n                setAuthTokens(data)\r\n                setUser(jwtDecode(data.access))\r\n                localStorage.setItem(authTokens,JSON.stringify(data))\r\n                navigate('/')\r\n            }else{\r\n                alert('Something went wrong!!')\r\n            }\r\n\r\n            // console.log('data:', data);\r\n            // console.log('response:', response);\r\n            // Assuming your server returns authentication tokens, setAuthTokens(data.tokens) here\r\n            // Similarly, set user details using setUser(data.user)\r\n        } catch (error) {\r\n            console.error('Error occurred during login:', error);\r\n        }\r\n    };\r\n\r\n    let logoutUser = () => {\r\n        setAuthTokens(null)\r\n        setUser(null)\r\n        localStorage.removeItem('authTokens')\r\n        navigate('/login')\r\n    }\r\n\r\n    let updateToken = async ()=> {\r\n        console.log('Update token called')\r\n        const response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    'refresh': authTokens.refresh})\r\n                })\r\n                let data= await response.json()\r\n\r\n                if(response.status===200){\r\n                    setAuthTokens(data)\r\n                    setUser(jwtDecode(data.access))\r\n                    localStorage.setItem(authTokens,JSON.stringify(data))\r\n                }else{\r\n                    logoutUser()\r\n                }\r\n\r\n\r\n    const contextData = {\r\n        user:user,\r\n        loginUser: loginUser,\r\n        logoutUser:logoutUser\r\n    };\r\n\r\n    useEffect(()=>{\r\n        let interval= setInterval(()=>{\r\n            if(authTokens){\r\n                updateToken()\r\n            }\r\n        },2000)\r\n        return ()=> clearInterval(interval)\r\n\r\n    },[authTokens, loading])\r\n\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextData}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n}\r\nexport { AuthContext, AuthProvider };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}