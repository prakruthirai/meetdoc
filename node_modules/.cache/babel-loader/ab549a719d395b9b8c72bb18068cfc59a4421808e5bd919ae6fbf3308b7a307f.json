{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anusha ps\\\\Desktop\\\\meetdoc\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst useAuth = () => {\n  _s();\n  const [authTokens, setAuthTokens] = useState(null);\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  const loginUser = async (username, password) => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api/authentication/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to authenticate\");\n      }\n      const data = await response.json();\n      console.log(\"Response data:\", data); // Log the response data\n      if (data && data.access_token) {\n        setAuthTokens(data);\n        setUser(jwtDecode(data.access_token));\n        localStorage.setItem(\"authTokens\", JSON.stringify(data));\n        navigate(\"/\");\n      } else {\n        console.error(\"Invalid token received:\", data.access_token);\n        throw new Error(\"Invalid token received\");\n      }\n      if (response.status === 200) {\n        setAuthTokens(data);\n        setUser(jwtDecode(data.access));\n        localStorage.setItem(\"authTokens\", JSON.stringify(data));\n        navigate(\"/\");\n      } else {\n        alert(\"Something went wrong!!\");\n      }\n    } catch (error) {\n      console.error(\"Error occurred during login:\", error);\n    }\n  };\n  const logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    navigate(\"/login\");\n  };\n  const updateToken = async () => {\n    console.log(\"Update token called\");\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api/authentication/refresh\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          refresh: authTokens.refresh\n        })\n      });\n      if (response.status === 200) {\n        const data = await response.json();\n        setAuthTokens(data);\n        setUser(jwtDecode(data.access));\n        localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      } else {\n        logoutUser();\n      }\n    } catch (error) {\n      console.error(\"Error occurred during token refresh:\", error);\n      logoutUser();\n    }\n  };\n  useEffect(() => {\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, 86400);\n    return () => clearInterval(interval);\n  }, [authTokens]);\n  return {\n    user,\n    loginUser,\n    logoutUser\n  };\n};\n_s(useAuth, \"bADW474GE9R+P7s/sACyUq6I5JE=\", false, function () {\n  return [useNavigate];\n});\nconst AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const auth = useAuth();\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"YuJWYXaKIY31b1y7U6yy3IXSxQA=\", false, function () {\n  return [useAuth];\n});\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jwtDecode","useNavigate","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","authTokens","setAuthTokens","user","setUser","navigate","loginUser","username","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","access_token","localStorage","setItem","error","status","access","alert","logoutUser","removeItem","updateToken","refresh","interval","setInterval","clearInterval","AuthProvider","children","_s2","auth","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anusha ps/Desktop/meetdoc/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst useAuth = () => {\r\n  const [authTokens, setAuthTokens] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const loginUser = async (username, password) => {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://127.0.0.1:8000/api/authentication/login\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            username: username,\r\n            password: password,\r\n          }),\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to authenticate\");\r\n      }\r\n      const data = await response.json();\r\n      console.log(\"Response data:\", data); // Log the response data\r\n      if (data && data.access_token) {\r\n        setAuthTokens(data);\r\n        setUser(jwtDecode(data.access_token));\r\n        localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n        navigate(\"/\");\r\n      } else {\r\n        console.error(\"Invalid token received:\", data.access_token);\r\n        throw new Error(\"Invalid token received\");\r\n      }\r\n      if (response.status === 200) {\r\n        setAuthTokens(data);\r\n        setUser(jwtDecode(data.access));\r\n        localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n        navigate(\"/\");\r\n      } else {\r\n        alert(\"Something went wrong!!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error occurred during login:\", error);\r\n    }\r\n  };\r\n\r\n  const logoutUser = () => {\r\n    setAuthTokens(null);\r\n    setUser(null);\r\n    localStorage.removeItem(\"authTokens\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const updateToken = async () => {\r\n    console.log(\"Update token called\");\r\n    try {\r\n      const response = await fetch(\r\n        \"http://127.0.0.1:8000/api/authentication/refresh\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            refresh: authTokens.refresh,\r\n          }),\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        const data = await response.json();\r\n        setAuthTokens(data);\r\n        setUser(jwtDecode(data.access));\r\n        localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n      } else {\r\n        logoutUser();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error occurred during token refresh:\", error);\r\n      logoutUser();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let interval = setInterval(() => {\r\n      if (authTokens) {\r\n        updateToken();\r\n      }\r\n    }, 86400);\r\n    return () => clearInterval(interval);\r\n  }, [authTokens]);\r\n\r\n  return { user, loginUser, logoutUser };\r\n};\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const auth = useAuth();\r\n  return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}