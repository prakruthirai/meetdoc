{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRAKRUTHI\\\\OneDrive\\\\Desktop\\\\meetdoc\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst useAuth = () => {\n  _s();\n  const [authTokens, setAuthTokens] = useState(null);\n  const [user, setUser] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const navigate = useNavigate();\n  const loginUser = async (username, password) => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api/authentication/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to authenticate\");\n      }\n      const data = await response.json();\n      console.log(\"Response data:\", data);\n      if (data && data.data && data.data.access_token) {\n        setAuthTokens(data.data);\n        setUser(jwtDecode(data.data.access_token));\n        localStorage.setItem(\"authTokens\", JSON.stringify(data.data));\n        setIsAdmin(data.data.role === 'Admin');\n        navigate(\"/\");\n      } else {\n        console.error(\"Invalid token received:\", data.data.access_token);\n        throw new Error(\"Invalid token received\");\n      }\n    } catch (error) {\n      console.error(\"Error occurred during login:\", error);\n      alert(\"Failed to authenticate. Please try again.\");\n    }\n  };\n  const logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    setIsAdmin(false);\n    localStorage.removeItem(\"authTokens\");\n    navigate(\"/login\");\n  };\n\n  // const updateToken = async () => {\n  //   console.log(\"Update token called\");\n  //   try {\n  //     const response = await fetch(\n  //       \"http://127.0.0.1:8000/api/authentication/refresh\",\n  //       {\n  //         method: \"POST\",\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //         },\n  //         body: JSON.stringify({\n  //           refresh: authTokens.refresh_token,\n  //         }),\n  //       }\n  //     );\n  //     if (response.ok) {\n  //       const data = await response.json();\n  //       setAuthTokens(data);\n  //       setUser(jwtDecode(data.access_token));\n  //       localStorage.setItem(\"authTokens\", JSON.stringify(data));\n  //     } else {\n  //       throw new Error(\"Failed to refresh token\");\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Error occurred during token refresh:\", error);\n  //     logoutUser();\n  //   }\n  // };\n\n  useEffect(() => {\n    if (authTokens) {\n      setUser(jwtDecode(authTokens.access_token));\n    }\n    setL;\n  }, [authTokens]);\n  return {\n    user,\n    loginUser,\n    logoutUser\n  };\n};\n_s(useAuth, \"yaNYmzxwMg4aHSn2/0U8SFHSDXk=\", false, function () {\n  return [useNavigate];\n});\nconst AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const auth = useAuth();\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"YuJWYXaKIY31b1y7U6yy3IXSxQA=\", false, function () {\n  return [useAuth];\n});\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jwtDecode","useNavigate","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","authTokens","setAuthTokens","user","setUser","isAdmin","setIsAdmin","navigate","loginUser","username","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","access_token","localStorage","setItem","role","error","alert","logoutUser","removeItem","setL","AuthProvider","children","_s2","auth","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PRAKRUTHI/OneDrive/Desktop/meetdoc/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst useAuth = () => {\r\n  const [authTokens, setAuthTokens] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const loginUser = async (username, password) => {\r\n    try {\r\n        const response = await fetch(\r\n            \"http://127.0.0.1:8000/api/authentication/login\",\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    username: username,\r\n                    password: password,\r\n                }),\r\n            }\r\n        );\r\n\r\n        if (!response.ok) {\r\n            throw new Error(\"Failed to authenticate\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log(\"Response data:\", data);\r\n\r\n        if (data && data.data && data.data.access_token) {\r\n            setAuthTokens(data.data);\r\n            setUser(jwtDecode(data.data.access_token));\r\n            localStorage.setItem(\"authTokens\", JSON.stringify(data.data));\r\n            setIsAdmin(data.data.role === 'Admin');\r\n            navigate(\"/\");\r\n        } else {\r\n            console.error(\"Invalid token received:\", data.data.access_token);\r\n            throw new Error(\"Invalid token received\");\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error occurred during login:\", error);\r\n        alert(\"Failed to authenticate. Please try again.\");\r\n    }\r\n};\r\n\r\n\r\n\r\n  const logoutUser = () => {\r\n    setAuthTokens(null);\r\n    setUser(null);\r\n    setIsAdmin(false);\r\n    localStorage.removeItem(\"authTokens\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  // const updateToken = async () => {\r\n  //   console.log(\"Update token called\");\r\n  //   try {\r\n  //     const response = await fetch(\r\n  //       \"http://127.0.0.1:8000/api/authentication/refresh\",\r\n  //       {\r\n  //         method: \"POST\",\r\n  //         headers: {\r\n  //           \"Content-Type\": \"application/json\",\r\n  //         },\r\n  //         body: JSON.stringify({\r\n  //           refresh: authTokens.refresh_token,\r\n  //         }),\r\n  //       }\r\n  //     );\r\n  //     if (response.ok) {\r\n  //       const data = await response.json();\r\n  //       setAuthTokens(data);\r\n  //       setUser(jwtDecode(data.access_token));\r\n  //       localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n  //     } else {\r\n  //       throw new Error(\"Failed to refresh token\");\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error(\"Error occurred during token refresh:\", error);\r\n  //     logoutUser();\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n\r\n    if(authTokens){\r\n      setUser(jwtDecode(authTokens.access_token))\r\n    }  \r\n     setL\r\n}, [authTokens]);\r\n\r\nreturn { user, loginUser, logoutUser };\r\n};\r\n\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const auth = useAuth();\r\n  return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}