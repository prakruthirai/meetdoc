{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRAKRUTHI\\\\OneDrive\\\\Desktop\\\\meetdoc\\\\src\\\\pages\\\\Uploadpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport baseURL from \"../Api/Config\";\nimport './uploadpage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Uploadpage = () => {\n  _s();\n  const [files, setFiles] = useState(null);\n  const [progress, setProgress] = useState({\n    started: false,\n    pc: 0\n  });\n  const [msg, setMsg] = useState(null);\n  const handleUpload = () => {\n    if (!files) {\n      setMsg(\"No file selected\");\n      return;\n    }\n    const fd = new FormData();\n    for (let i = 0; i < files.length; i++) {\n      fd.append(`files[${i}]`, files[i]);\n    }\n    setMsg(\"Uploading...\");\n    setProgress(prevState => ({\n      ...prevState,\n      started: true\n    }));\n    axios.post(`${baseURL}/api/meetdoc/upload-audio/`, fd, {\n      onUploadProgress: progressEvent => {\n        const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        setProgress(prevState => ({\n          ...prevState,\n          pc: percentCompleted\n        }));\n      },\n      headers: {\n        // \"Custom-Header\": \"value\",\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => {\n      setMsg(\"Upload successful\");\n      console.log(res.data);\n    }).catch(err => {\n      setMsg(\"Upload failed\");\n      console.error(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Uploading Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setFiles(e.target.files),\n      type: \"file\",\n      multiple: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), files && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      className: \"upload-button\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), progress.started && /*#__PURE__*/_jsxDEV(\"progress\", {\n      max: \"100\",\n      value: progress.pc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 28\n    }, this), msg && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Uploadpage, \"n3CbiPeun6Nw7wysuWYI92D59Kc=\");\n_c = Uploadpage;\nexport default Uploadpage;\nvar _c;\n$RefreshReg$(_c, \"Uploadpage\");","map":{"version":3,"names":["React","useState","axios","baseURL","jsxDEV","_jsxDEV","Uploadpage","_s","files","setFiles","progress","setProgress","started","pc","msg","setMsg","handleUpload","fd","FormData","i","length","append","prevState","post","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","headers","then","res","console","log","data","catch","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","type","multiple","onClick","max","value","_c","$RefreshReg$"],"sources":["C:/Users/PRAKRUTHI/OneDrive/Desktop/meetdoc/src/pages/Uploadpage.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport baseURL from \"../Api/Config\";\r\nimport './uploadpage.css'\r\n\r\nconst Uploadpage = () => {\r\n  const [files, setFiles] = useState(null);\r\n  const [progress, setProgress] = useState({ started: false, pc: 0 });\r\n  const [msg, setMsg] = useState(null);\r\n\r\n  const handleUpload = () => {\r\n    if (!files) {\r\n      setMsg(\"No file selected\");\r\n      return;\r\n    }\r\n    \r\n    const fd = new FormData();\r\n    for (let i = 0; i < files.length; i++) {\r\n      fd.append(`files[${i}]`, files[i]);\r\n    }\r\n\r\n    setMsg(\"Uploading...\");\r\n    setProgress(prevState => ({ ...prevState, started: true }));\r\n\r\n    axios.post(`${baseURL}/api/meetdoc/upload-audio/`, fd, {\r\n      onUploadProgress: (progressEvent) => {\r\n        const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n        setProgress(prevState => ({ ...prevState, pc: percentCompleted }));\r\n      },\r\n      headers: {\r\n        // \"Custom-Header\": \"value\",\r\n        'Content-Type': 'multipart/form-data',\r\n      }\r\n    })\r\n    .then(res => {\r\n      setMsg(\"Upload successful\");\r\n      console.log(res.data);\r\n    })\r\n    .catch(err => {\r\n      setMsg(\"Upload failed\");\r\n      console.error(err);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-card\">\r\n      <h1>Uploading Files</h1>\r\n      <input onChange={(e) => setFiles(e.target.files)} type='file' multiple />\r\n      {files && <button onClick={handleUpload} className=\"upload-button\">Upload</button>}\r\n      {progress.started && <progress max='100' value={progress.pc}></progress>}\r\n      {msg && <span>{msg}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Uploadpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}