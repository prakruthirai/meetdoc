{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRAKRUTHI\\\\OneDrive\\\\Desktop\\\\meetdoc\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst useAuth = () => {\n  _s();\n  const [authTokens, setAuthTokens] = useState(null);\n  const [user, setUser] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [loading, setLoading] = use;\n  const navigate = useNavigate();\n  const loginUser = async (username, password) => {\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/api/token/', {\n        username: username,\n        password: password\n      });\n      const data = response.data;\n      if (response.status === 200) {\n        setAuthTokens(data);\n        setUser(jwtDecode(data.access));\n        localStorage.setItem('authTokens', JSON.stringify(data));\n        navigate('/');\n      } else {\n        alert('Something went wrong!');\n      }\n    } catch (error) {\n      console.error('Error occurred during login:', error);\n      alert('Failed to authenticate. Please try again.');\n    }\n  };\n  const logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    setIsAdmin(false);\n    localStorage.removeItem(\"authTokens\");\n    navigate(\"/login\");\n  };\n\n  // const updateToken = async () => {\n  //   console.log(\"Update token called\");\n  //   try {\n  //     const response = await fetch(\n  //       \"http://127.0.0.1:8000/api/authentication/refresh\",\n  //       {\n  //         method: \"POST\",\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //         },\n  //         body: JSON.stringify({\n  //           refresh: authTokens.refresh_token,\n  //         }),\n  //       }\n  //     );\n  //     if (response.ok) {\n  //       const data = await response.json();\n  //       setAuthTokens(data);\n  //       setUser(jwtDecode(data.access_token));\n  //       localStorage.setItem(\"authTokens\", JSON.stringify(data));\n  //     } else {\n  //       throw new Error(\"Failed to refresh token\");\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Error occurred during token refresh:\", error);\n  //     logoutUser();\n  //   }\n  // };\n\n  useEffect(() => {\n    if (authTokens) {\n      setUser(jwtDecode(authTokens.access_token));\n    }\n    setLoading(false);\n  }, [authTokens, loading]);\n  return {\n    user,\n    isAdmin,\n    loginUser,\n    logoutUser\n  };\n};\n_s(useAuth, \"yaNYmzxwMg4aHSn2/0U8SFHSDXk=\", false, function () {\n  return [useNavigate];\n});\nconst AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const auth = useAuth();\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"YuJWYXaKIY31b1y7U6yy3IXSxQA=\", false, function () {\n  return [useAuth];\n});\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\n\n// -----------------------------------------------\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jwtDecode","useNavigate","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","authTokens","setAuthTokens","user","setUser","isAdmin","setIsAdmin","loading","setLoading","use","navigate","loginUser","username","password","response","post","data","status","access","localStorage","setItem","JSON","stringify","alert","error","console","logoutUser","removeItem","access_token","AuthProvider","children","_s2","auth","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PRAKRUTHI/OneDrive/Desktop/meetdoc/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst useAuth = () => {\r\n  const [authTokens, setAuthTokens] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [loading, setLoading] = use\r\n\r\n  const navigate = useNavigate();\r\n  const loginUser = async (username, password) => {\r\n    try {\r\n        const response = await axios.post('http://127.0.0.1:8000/api/token/', {\r\n            username: username,\r\n            password: password\r\n        });\r\n\r\n        const data = response.data;\r\n\r\n        if (response.status === 200) {\r\n            setAuthTokens(data);\r\n            setUser(jwtDecode(data.access));\r\n            localStorage.setItem('authTokens', JSON.stringify(data));\r\n            navigate('/');\r\n        } else {\r\n            alert('Something went wrong!');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error occurred during login:', error);\r\n        alert('Failed to authenticate. Please try again.');\r\n    }\r\n};\r\n\r\n\r\n\r\n  const logoutUser = () => {\r\n    setAuthTokens(null);\r\n    setUser(null);\r\n    setIsAdmin(false);\r\n    localStorage.removeItem(\"authTokens\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  // const updateToken = async () => {\r\n  //   console.log(\"Update token called\");\r\n  //   try {\r\n  //     const response = await fetch(\r\n  //       \"http://127.0.0.1:8000/api/authentication/refresh\",\r\n  //       {\r\n  //         method: \"POST\",\r\n  //         headers: {\r\n  //           \"Content-Type\": \"application/json\",\r\n  //         },\r\n  //         body: JSON.stringify({\r\n  //           refresh: authTokens.refresh_token,\r\n  //         }),\r\n  //       }\r\n  //     );\r\n  //     if (response.ok) {\r\n  //       const data = await response.json();\r\n  //       setAuthTokens(data);\r\n  //       setUser(jwtDecode(data.access_token));\r\n  //       localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n  //     } else {\r\n  //       throw new Error(\"Failed to refresh token\");\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error(\"Error occurred during token refresh:\", error);\r\n  //     logoutUser();\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n\r\n    if(authTokens){\r\n      setUser(jwtDecode(authTokens.access_token))\r\n    }  \r\n     setLoading(false)\r\n}, [authTokens, loading]);\r\n\r\nreturn { user,isAdmin, loginUser, logoutUser };\r\n};\r\n\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const auth = useAuth();\r\n  return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\n\r\n// -----------------------------------------------\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}